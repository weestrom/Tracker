#!/usr/bin/perl

#######################################################################################
#                 Copyright (c) 2013 Digitronix, Inc.                                 #
#					 All rights reserved											  #
#######################################################################################

package App::Crankshaft;
use base 'Mojolicious::Controller';
use Data::UUID;
use HTTP::Date;

sub frontpage {
	my $self = shift;
		my $pagetext = '<title> Tracker </title> <header><h1> Tracker </h1><br>';
		$pagetext = $self->openform('inbound',$pagetext);
	    $pagetext = $self->openform('outbound',$pagetext);
	    
	    $self->render(text => $pagetext);

}

sub datehandler {
	my $self = shift;
	my $datestring = shift;
	my $teststring = $datestring;
	my @datelist = split("",$datestring);
	
	if (scalar(@datelist) == 4)
	{
		my ($second, $minute, $hour, $dayOfMonth, $month, $yearOffset, $dayOfWeek, $dayOfYear, $daylightSavings) = localtime();
		my $year = $yearOffset - 100;
		$datestring = $datestring.$year;
		@datelist = split("",$datestring);
	}

	if (scalar(@datelist) != 6)
	{
		return '';
	}
	
	$teststring =~ s/[0-9]//g;
	if (!($teststring eq ''))
	{
		return '';
	}
	my $daystring = substr($datestring, 2, 2);
	my $monthstring = substr($datestring, 0, 2);
	my $yearstring = substr($datestring, 4, 2);
	return '20' . $yearstring . '-' . $monthstring . '-' . $daystring;
}

sub displaydate {
	my $self = shift;
	my $datestring = shift;
	
	return substr($datestring,5,2) . substr($datestring,8,2) . substr($datestring,2,2);
}

sub datetest {
	my $self = shift;
	my $date = shift;
	
	my @datelist = split('-',$date);
	my @numtest = split ('-',$date);
	my $numresult = 0;
	foreach my $num (@numtest)
	{
		$num =~ s/[0-9]//g;
		if (!($num eq ''))
		{
			$numresult = 1;
		}
	}
	if (scalar(@datelist) != 3 || length($datelist[0]) != 4 || length($datelist[1]) != 2 || length($datelist[2]) != 2 || $numresult == 1)
	{
		return 0;
		
	}
	else
	{
		return 1;
	}
}

sub appthandler {
	my $self = shift;
	my $appt = shift;
	
	my @apptsplit = split(' ',$appt);
	if (scalar(@apptsplit) == 0)
	{
		@apptsplit = ( "000000", "00:00");
	}
	
	my $timetest = $apptsplit[1];
	$timetest =~ s/[0-9]?[0-9]:[0-9][0-9]//g;
	if (!($timetest eq ''))
	{
		@apptsplit = ( $apptsplit[0], "00:00");
	}
	
	if ($self->datehandler($apptsplit[0]))
	{
		return $self->datehandler($apptsplit[0]) . ' ' . $apptsplit[1];
	}
	else
	{
		return '0000-00-00 ' . $apptsplit[1];
	}	
}

sub openform{
	my $self = shift;
	my $direction = shift;
	my $pagetext = shift;
	my $displaydirection = $direction;
	$displaydirection =~ s/^./\U$&/g;
	$pagetext = $pagetext . '<form action="/' . $direction . '/" method="GET">Open ' . $displaydirection . ' Date (MMDDYY):<input name="date" value="" type="text"><input type="submit"></form><br>';
	return $pagetext;	
}

sub newform {
	
	my $self = shift;
	my $direction = shift;
	my $displaydate = shift;
	my $pagetext = shift;
	
	$pagetext = $pagetext . '<form action="/submit' . $direction . '" method="POST">';
		$pagetext = $pagetext . 'New Load:';
		$pagetext = $pagetext . '<table border="0">';
		$pagetext = $pagetext . '<tr><td>Date<br />(mmddyy)</td><td>Trac#</td><td>Trlr#</td><td>Driver</td><td>Origin</td><td>Destination</td><td>Appt<br />(mmddyy hh:mm)</td><td>Backhaul</td></tr>';
		$pagetext = $pagetext . '<tr><td><input type="text" name="date" maxlength="10" size="10" value="' . $displaydate . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="tracnum" maxlength="6" size="6" value=""/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="trlrnum" maxlength="6" size="6" value=""/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="driver" maxlength="30" size="12" value=""/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="origin" maxlength="30" size="12" value=""/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="destination" maxlength="30" size="12" value=""/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="appt" maxlength="16" size="16" value="000000 00:00"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="backhaul" maxlength="30" size="12" value=""/></td></tr>';
		$pagetext = $pagetext . '</table>';
		$pagetext = $pagetext . '<input type="submit" value="Submit" />';
		$pagetext = $pagetext . '</form>';
		
		return $pagetext;
		
}

sub resultstable {
	
	my $self = shift;
	my $direction = shift;
	my $dbdate = shift;
	my $pagetext = shift;
	
	
	$pagetext = $pagetext . '<table border="1">';
	$pagetext = $pagetext . '<tr><td></td><td>Trac#</td><td>Trlr#</td><td>Driver</td><td>Origin</td><td>Destination</td><td>Appt</td><td>Backhaul</td></tr>';
	
	my $rs = $self->app->schema->resultset($direction);
	my $search = $rs->search({recdate => $dbdate});
	my $row;
	while ( $row = $search->next || '')
	{
		$pagetext = $pagetext . '<tr><td><a href="' . $self->url_for('/edit/' . $row->uuid) . '">edit</a></td>';
		$pagetext = $pagetext . '<td>' . $row->tracnum . '</td>';
		$pagetext = $pagetext . '<td>' . $row->trlrnum . '</td>';
		$pagetext = $pagetext . '<td>' . $row->driver . '</td>';
		$pagetext = $pagetext . '<td>' . $row->origin . '</td>';
		$pagetext = $pagetext . '<td>' . $row->destination . '</td>';
		my @apptsplit = split(' ',$row->appt);
		$pagetext = $pagetext . '<td>' . $self->displaydate($apptsplit[0]) . ' ' . substr($apptsplit[1],0,5) . ' ' .substr(time2str(str2time($apptsplit[0])),0,3) . '</td>';
		$pagetext = $pagetext . '<td>' . $row->backhaul . '</td></tr>';
	}
	$pagetext = $pagetext . '</table><br>';
	
	return $pagetext;
}

sub submitinbound {
	my $self = shift;
	my $haul_rs = $self->app->schema->resultset('Data');
	my $ug = new Data::UUID;
	my $dbappt = $self->appthandler($self->param('appt'));
	
	my $date = $self->param('date');
	my $dbdate = $self->datehandler($date);
	if ($self->datetest($dbdate))
	{
		my $new_haul = $haul_rs->new({
		uuid => $ug->create_str(),
		recdate => $dbdate,
		tracnum => $self->param('tracnum'),
		trlrnum => $self->param('trlrnum'),
		driver => $self->param('driver'),
		origin => $self->param('origin'),
		destination => $self->param('destination'),
		appt => $dbappt,
		backhaul => $self->param('backhaul'),
		direction => 'INBOUND',
		
		});
		$new_haul->insert;
		$self->redirect_to('/inbound/' . $self->param('date'));
	}
	else
	{
		$self->render(text => 'Invalid Date Format');
		
	}

}

sub inbound {
	my $self = shift;
	my $date = $self->param('date');
	my $dbdate = $self->datehandler($date);
	my $displaydate = $self->displaydate($dbdate);
	
	my $pagetext = '<title> Tracker :: Inbound Loads </title> <header><h1>' . $displaydate .  ' Inbound Loads<br>';
	if($self->datetest($dbdate))
	{
	 $pagetext = $pagetext . substr(time2str(str2time($dbdate)),0,3) . '<br>';	
	}
	$pagetext = $pagetext . '</h1><form action="/inbound/" method="GET">Open Date (MMDDYY):<input name="date" value="" type="text"><input type="submit"></form><br>';
		
	
	if($self->datetest($dbdate))
	{
		
		$pagetext = $self->newform('inbound', $displaydate, $pagetext);
		$pagetext = $self->resultstable('Inbound', $dbdate, $pagetext);
			
	}
	$self->render(text => $pagetext);
		
	
}

sub submitoutbound {
	my $self = shift;
	my $haul_rs = $self->app->schema->resultset('Data');
	my $ug = new Data::UUID;
	my $dbappt = $self->appthandler($self->param('appt'));
	my $date = $self->param('date');
	my $dbdate = $self->datehandler($date);
	if ($self->datetest($dbdate))
	{
		my $new_haul = $haul_rs->new({
		uuid => $ug->create_str(),
		recdate => $dbdate,
		tracnum => $self->param('tracnum'),
		trlrnum => $self->param('trlrnum'),
		driver => $self->param('driver'),
		origin => $self->param('origin'),
		destination => $self->param('destination'),
		appt => $dbappt,
		backhaul => $self->param('backhaul'),
		direction => 'OUTBOUND',
		
		});
		$new_haul->insert;
		$self->redirect_to('/outbound/' . $self->param('date'));
	}
	else
	{
		$self->render(text => 'Invalid Date Format');
		
	}

}

sub outbound {
	my $self = shift;
	my $date = $self->param('date');
	my $dbdate = $self->datehandler($date);
	my $displaydate = $self->displaydate($dbdate);
	my $pagetext = '<title> Tracker :: Outbound Loads </title> <header><h1>' . $displaydate .  ' Outbound Loads<br>';
	if($self->datetest($dbdate))
	{ 
		$pagetext = $pagetext . substr(time2str(str2time($dbdate)),0,3) . '<br>';
	}
	$pagetext = $pagetext . '</h1><form action="/outbound/" method="GET">Open Date (MMDDYY):<input name="date" value="" type="text"><input type="submit"></form><br>';
		
	
	if($self->datetest($dbdate))
	{
		$pagetext = $self->newform('outbound', $displaydate, $pagetext);
		$pagetext = $self->resultstable('Outbound', $dbdate, $pagetext);
		
	}
	$self->render(text => $pagetext);
		
	
}

sub edit {
	my $self = shift;
	my $uuid = $self->param('uuid');
	my $data_row = $self->app->schema->resultset('Data')->search({uuid => $uuid})->next || '';
	if ($data_row)
	{
		my $pagetext = '<form action="uuidedit" method="POST"><input type="hidden" name="uuid" value="' . $uuid . '"/>';
		$pagetext = $pagetext . '<input type="hidden" name="direction" value="' . $data_row->direction . '"/>';
		$pagetext = $pagetext . '<table border="0">';
		$pagetext = $pagetext . '<tr><td>Date<br />(mmddyy)</td><td>Trac#</td><td>Trlr#</td><td>Driver</td><td>Origin</td><td>Destination</td><td>Appt<br />(mmddyy hh:mm)</td><td>Backhaul</td></tr>';
		$pagetext = $pagetext . '<tr><td><input type="text" name="recdate" maxlength="10" size="10" value="' . $self->displaydate($data_row->recdate) . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="tracnum" maxlength="6" size="6" value="' . $data_row->tracnum . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="trlrnum" maxlength="6" size="6" value="' . $data_row->trlrnum . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="driver" maxlength="30" size="12" value="' . $data_row->driver . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="origin" maxlength="30" size="12" value="' . $data_row->origin . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="destination" maxlength="30" size="12" value="' . $data_row->destination . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="appt" maxlength="20" size="20" value="' . $self->displaydate(substr($data_row->appt,0,10)) . substr($data_row->appt,10,6) . '"/></td>';
		$pagetext = $pagetext . '<td><input type="text" name="backhaul" maxlength="30" size="12" value="' . $data_row->backhaul . '"/></td></tr>';
		$pagetext = $pagetext . '</table>';
		$pagetext = $pagetext . '<input type="submit" value="Submit" />';
		$pagetext = $pagetext . '</form>';
		$self->render(text => $pagetext);
	}
	else
	{
		$self->redirect_to('/');
	}
}

sub uuidedit {
	my $self = shift;
	my $data_row = $self->app->schema->resultset('Data')->search({uuid => $self->param('uuid')})->next || '';
	if ($data_row)
	{
		$data_row->update(
		{
			'recdate' => $self->datehandler($self->param('recdate')),
			'tracnum' => $self->param('tracnum'),
			'trlrnum' => $self->param('trlrnum'),
			'driver' => $self->param('driver'),
			'origin' => $self->param('origin'),
			'destination' => $self->param('destination'),
			'appt' => $self->appthandler($self->param('appt')),
			'backhaul' => $self->param('backhaul')
				
		});
	}
	my $direction = $self->param('direction');
	$direction =~ tr/A-Z/a-z/;
	$self->redirect_to('/' . $direction . '/' . $self->param('recdate'));
}



1;
